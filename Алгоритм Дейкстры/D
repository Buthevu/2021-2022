#include <iostream>
#include <set>
#include <vector>
/*
3 3
1 2 10 3000220
2 3 20 3000201
1 3 1 3000099
*/
using namespace std;

vector <pair <long long int, pair <long long int, long long int>>> graph[500];

long long int dist[500];

int main()
{
    int n;
    int m;
    cin >> n >> m;
    for (int i = 0; i < m; i++)
    {
        long long int a;
        long long int b;
        long long int t;
        long long int m;
        cin >> a >> b >> t >> m;
        a = a - 1;
        b = b - 1;
        graph[a].push_back(make_pair(b, make_pair(t, m)));
        graph[b].push_back(make_pair(a, make_pair(t, m)));
    }
    long long int a = 3000000;
    long long int b = 1003000001;
    while (b - a > 1)
    {
        long long int c = (a + b) / 2;
        set <pair<long long int, long long int>> pir;
        for (long long int i = 0; i < n; i++)
        {
            dist[i] = -1;
        }
        pir.insert(make_pair(0, 0));
        while (pir.empty() == false)
        {
            auto it = pir.begin();
            long long int d = (*it).first;
            long long int x = (*it).second;
            pir.erase(it);
            if (dist[x] != -1)
            {
                continue;
            }
            dist[x] = d;
            for (long long int i = 0; i < graph[x].size(); i++)
            {
                long long int y = graph[x][i].first;
                long long int t = graph[x][i].second.first;
                long long int m = graph[x][i].second.second;
                if (m < c)
                {
                    continue;
                }
                pir.insert(make_pair(d + t, y));
            }
        }
        if ((dist[n - 1] <= 1440) && (dist[n - 1] != -1))
        {
            a = c;
        }
        else
        {
            b = c;
        }
    }
    int ans = (a - 3000000) / 100;
    //int ans = a;
    cout << ans;
    return 0;
}
