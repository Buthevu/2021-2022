#include <iostream>
#include <set>
#include <vector>

using namespace std;

long long int matrix[100][100];
long long int dist[100];
int pr[100];

set <pair<long long int, int>> pir;

int main() {
	int n;
	int s;
	int f;
	cin >> n >> s >> f;
	s = s - 1;
	f = f - 1;
	for (int i = 0; i < n; i++)
	{
		dist[i] = -1;
		pr[i] = -1;
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cin >> matrix[i][j];
		}
	}
	pir.insert(make_pair(0, s));
	while (pir.empty() == false)
	{
		auto it = pir.begin();
		long long int d = (*it).first;
		int x = (*it).second;
		pir.erase(*it);
		if ((dist[x] != -1) && (dist[x] < d))
		{
			continue;
		}
		dist[x] = d;
		for (int i = 0; i < n; i++)
		{
			if (matrix[x][i] > -1)
			{
				if (dist[i] == -1)
				{
					pr[i] = x;
					dist[i] = d + matrix[x][i];
					pir.insert(make_pair(d + matrix[x][i], i));
				}
				else if (dist[i] > d + matrix[x][i]) 
				{
					pr[i] = x;
					dist[i] = d + matrix[x][i];
					pir.insert(make_pair(d + matrix[x][i], i));
				}
			}
		}
	}
	if (dist[f] == -1)
	{
		cout << -1;
	}
	else
	{
		vector <int> ans;
		while (f != s)
		{
			ans.push_back(f);
			f = pr[f];
		}
		cout << s + 1;
		for (int i = ans.size() - 1; i > -1; i--)
		{
			cout << " " << ans[i] + 1;
		}
	}
	return 0;
}
