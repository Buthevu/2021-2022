#include <iostream>
#include <vector>

using namespace std;

vector <pair <int, int>> swaps;

int main() {
	int n;
	cin >> n;
	for (int i = n - 1; i > 0; i--)
	{
		for (int j = 0; j < i; j++)
		{
			swaps.push_back(make_pair(j, j + 1));
		}
	}
	int i = 0;
	while (i < swaps.size())
	{
		vector <int> print;
		for (int i = 0; i < n; i++)
		{
			print.push_back(0);
		}
		while (i < swaps.size())
		{
			if ((print[swaps[i].first] == 0) && (print[swaps[i].second] == 0))
			{
				print[swaps[i].first] = -1;
				print[swaps[i].second] = 1;
				for (int j = (swaps[i].first + 1); j < swaps[i].second; j++)
				{
					print[j] = 2;
				}
				i++;
			}
			else
			{
				break;
			}
		}
		if (print[0] == 0)
		{
			cout << " | ";
		}
		else
		{
			cout << " +-";
		}
		for (int i = 1; i < n - 1; i++)
		{
			if (print[i] == 0)
			{
				cout << " | ";
			}
			else if (print[i] == 1)
			{
				cout << "-+ ";
			}
			else if (print[i] == 2)
			{
				cout << "---";
			}
			else
			{
				cout << " +-";
			}
		}
		if (print[n - 1] == 0)
		{
			cout << " | ";
		}
		else
		{
			cout << "-+ ";
		}
		cout << endl;
	}
	cout << endl;
	for (long long int t = 0; t < (1 << n); t++)
	{
		long long a = t;
		for (int i = 0; i < swaps.size(); i++)
		{
			long long int x = a & (1 << swaps[i].first);
			while (((x % 2) == 0) &&(x != 0))
			{
				x = x / 2;
			}
			long long int y = a & (1 << swaps[i].second);
			while (((y % 2) == 0) && (y != 0))
			{
				y = y / 2;
			}
			if (x < y)
			{
				a = a - (1 << swaps[i].first);
				a = a + (1 << swaps[i].second);
			}
		}
		bool p = true;
		while ((a % 2) == 1)
		{
			a = a / 2;
		}
		if (a == 0)
		{
			cout << t << ":" << "True" << endl;
		}
		else
		{
			cout << t << ":" << "False" << endl;
		}
	}
	return 0;
}
